name: Build and Test

#on: [push, pull_request]
on: [pull_request]

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Debug Build
      run: |
        xcodebuild -scheme HeliPort -configuration Debug -derivedDataPath build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO | xcpretty && exit ${PIPESTATUS[0]}

    # Uncomment until ClientKit DSYM generation gets fixed
    #- name: Release Build
    #  run: |
    #    xcodebuild -scheme HeliPort -configuration Release -derivedDataPath build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO | xcpretty && exit ${PIPESTATUS[0]}

    - name: Swiftlint
      run: |
        brew install swiftlint
        swiftlint

    - name: Prepare GH Release
      if: github.event_name == 'push' && contains(github.event.head_commit.message, 'GH release')
      run: |
        eval $(grep -m 1 "MARKETING_VERSION" HeliPort.xcodeproj/project.pbxproj | tr -d ';' | tr -d '\t' | tr -d " ")
        
        # Unless this project becomes insane, there's no chance that the version number will be larger than 9.9.9
        if [[ ${MARKETING_VERSION##*.} == 9 ]]; then
            if [[ ${MARKETING_VERSION:2:1} == 9 ]]; then
                NewVer="$((${MARKETING_VERSION:0:1}+1)).0.0"
            else
                NewVer="${MARKETING_VERSION:0:1}.$((${MARKETING_VERSION:2:1}+1)).0"
            fi
        else
            NewVer="${MARKETING_VERSION%.*}.$((${MARKETING_VERSION##*.}+1))"
        fi
        
        echo "::set-env name=NewVer::$NewVer"
        
        #cd build/Build/Products/Release
        cd build/Build/Products/Debug
        zip -qr HeliPort-v${NewVer}.zip *.app
        cd -
        
        git log -"$(git rev-list --count $(git rev-list --tags | head -n 1)..HEAD)" --format="- %H %s" | grep -v 'gitignore\|Repo\|Docs\|Merge\|yml\|CI\|Commit\|commit\|attributes' | sed  '/^$/d' >> ReleaseNotes.md


    - name: GH Release
      if: github.event_name == 'push' && contains(github.event.head_commit.message, 'GH release')
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/Build/Products/Debug/*.zip"
        bodyFile: ReleaseNotes.md
        replacesArtifacts: false
        draft: false
        tag: "v${{ env.NewVer }}"
        token: ${{ secrets.GITHUB_TOKEN }}
